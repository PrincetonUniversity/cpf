# Run tests on Spec2017 every night or on demand

name: SpecTest

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
    # schedule:
    # - cron: "0 5 * * *" # 5AM UTC everyday (12AM ET)
    workflow_dispatch:
        inputs:
            suite:
                description: 'Benchmark suite option to run'
                required: true
                default: 'All'
            reg_option:
                description: 'Regression Option (0: start from scratch; 1: with existing profiles)'
                required: true
                default: 0
                type: number
            memo:
                description: 'Memo'
                required: true
                default: "GitHub Action run"

#   pull_request:
#     branches: [ master ]
env:
  REG_SUITE: ${{ github.event.inputs.suite || 'All' }} # default is to run all

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  spec_test:
    # The type of runner that the job will run on
    runs-on: [self-hosted, Linux, X64]
    timeout-minutes: 1440

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    # TODO: Check out no-scaf
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Confirm
      run: echo "Start building!"

    - name: Git Clone Action
      # You may pin to the exact commit or the version.
      # uses: sudosubin/git-clone-action@8a93ce24d47782e30077508cccacf8a05a891bae
      uses: sudosubin/git-clone-action@v1.0.1
      with:
        # Repository owner and name. Ex: sudosubin/git-clone-action
        repository: vgene/AutoParExperimentDriver # optional, default is ${{ github.repository }}
        # Git host platform. Ex: github, gitlab, bitbucket, gitee, or else (git.suckless.org, ...)
        platform: github # optional, default is github
        # Git branch or tag to checkout.
        ref: master # optional
        path: Driver

    # # Runs a set of commands using the runners shell
    # - name: Build CPF
    #   run: make -C bootstrap -f Makefile.github all

    - name: Set Date
      run: |
          echo "DATE_STR=$(date '+%Y-%m-%d-%H-%M')" >> $GITHUB_ENV

    - name: Run tests
      run: |
          source /scratch/ziyangx/ve_py3/bin/activate
          source /tmp/github-cpf-test/cpf-env-release.rc
          echo ${{ env.DATE_STR }}
          cp -sR /scratch/spec2017-workspace/spec2017/ /scratch/spec2017-workspace/spec2017-${{ env.DATE_STR }}
          rm -rf /scratch/spec2017-workspace/spec2017-${{ env.DATE_STR }}/results/*
          python ${GITHUB_WORKSPACE}/Driver/GetResults.py -p /scratch/spec2017-workspace/spec2017-${{ env.DATE_STR }} -b /scratch/spec2017-workspace/spec2017/bmark_list_spec2017.json -r ${{ github.event.inputs.reg_option }} -m "${{ github.event.inputs.memo }}" -n 15 -s ${{ env.REG_SUITE }}

    - name: Upload artifacts
      run: |
          pushd /scratch/spec2017-workspace/spec2017-${{ env.DATE_STR }}
          ~/update_and_sync.sh results
          popd

    - name: Archive artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: results
        path: |
          /scratch/spec2017-workspace/spec2017/results
