# !!!Read before any change!!!
# For all the variable definitions
# Don't use quotes
# Make sure there are no trailing spaces
# "Enjoy GNU Make"
SHELL := /bin/bash

## Start of Configuration ##

## If set to 1, all compiled version (LLVM, NOELLE, CPF) will only work with the release version
only-compile-release-versions?=0

########
# LLVM #
########
compile-llvm=0

## If compile-llvm=0, provide paths to both the debug and the release versions
llvm-install-dir-debug=/scratch/install/llvm-install-debug
llvm-install-dir-release=/scratch/install/llvm-install-release

##########
# NOELLE #
##########
compile-noelle?=1

## If compile-noelle=0, provide paths to both the debug and the release versions
noelle-install-dir-debug=/tmp/github-cpf-test/noelle-install-debug
noelle-install-dir-release=/tmp/github-cpf-test/noelle-install-release

## If compile-noelle=1, use this url to clone and build NOELLE from scratch
## Don't use quotes
noelle-remote-url=https://github.com/scampanoni/noelle.git
noelle-branch=origin/master

##########
# SCAF #
##########
# Use noelle scaf override compile-scaf to be 0
# Should not use noelle's scaf normally because it does not contain speculation modules
use-noelle-scaf=0
compile-scaf=1

## If compile-scaf=0 and use-noelle-scaf=0  provide paths to both the debug and the release versions
#scaf-install-dir-debug=/scratch/install/scaf-install-debug
#scaf-install-dir-release=/scratch/install/scaf-install-release

## If compile-scaf=1, use this url to clone and build SCAF from scratch
## Don't use quotes
scaf-remote-url=https://github.com/PrincetonUniversity/SCAF.git
scaf-branch=origin/master

#######
# CPF #
#######
compile-cpf=1
## If compile-cpf=0, provide paths to both the debug and the release versions
#cpf-install-dir-debug=/scratch/install/cpf-install-debug
#cpf-install-dir-release=/scratch/install/cpf-install-release

##############
# Installing #
##############

# Make sure you have write privilege to both directories here
install-prefix=/tmp/github-cpf-test
cpf-root-path:=${GITHUB_WORKSPACE}

# verbose output
# 1: print all internal cmake/make message to terminal
# 0: save all output to file only
verbose=1

# Number of workers to build LLVM/CPF, NOELLE will use as many core as possible
# by default and we don't have control over it
num-workers=16

## End of Configuration ##

include Makefile.root
