BASE_DIR:=$(shell pwd)
ORIGINAL_PATH:=${PATH}
JOBS?=16

CPF_INSTALL_DEBUG=$(BASE_DIR)/cpf-install-debug
CPF_INSTALL_RELEASE=$(BASE_DIR)/cpf-install-release

CC= gcc
CXX= g++

ifndef LLVM_INSTALL_DEBUG
$(error LLVM_INSTALL_DEBUG is not set)
endif

ifndef LLVM_INSTALL_RELEASE
$(error LLVM_INSTALL_RELEASE is not set)
endif

ifndef CPF_ROOT_PATH
$(error CPF_ROOT_PATH is not set)
endif

ifndef NOELLE_INSTALL_DEBUG
$(error NOELLE_INSTALL_DEBUG is not set)
endif

ifndef NOELLE_INSTALL_RELEASE
$(error NOELLE_INSTALL_RELEASE is not set)
endif

all: cpf-objects-debug cpf-objects-release
.PHONY: cpf-objects-debug cpf-objects-release clean

clean:
	rm -rf cpf-build-debug cpf-build-release $(CPF_INSTALL_DEBUG) $(CPF_INSTALL_RELEASE)

cpf-objects-debug: export PATH=${LLVM_INSTALL_DEBUG}/bin/:${ORIGINAL_PATH}
cpf-objects-debug: export NOELLE_INSTALL_DIR=${NOELLE_INSTALL_DEBUG}
cpf-objects-debug:
	mkdir -p cpf-build-debug
	cd ./cpf-build-debug && \
	cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_INSTALL_PREFIX="$(CPF_INSTALL_DEBUG)" -DCMAKE_BUILD_TYPE=Debug -DLLVM_ENABLE_UNWIND_TABLES=On ${CPF_ROOT_PATH}/liberty && \
	make -j${JOBS} && \
	make install
	ln -sf $(CPF_INSTALL_DEBUG)/compile_commands.json $(CPF_ROOT_PATH)

cpf-objects-release: export PATH=${LLVM_INSTALL_RELEASE}/bin/:${ORIGINAL_PATH}
cpf-objects-release: export NOELLE_INSTALL_DIR=${NOELLE_INSTALL_RELEASE}
cpf-objects-release:
	mkdir -p cpf-build-release
	cd ./cpf-build-release && \
	cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_INSTALL_PREFIX="$(CPF_INSTALL_RELEASE)" -DCMAKE_BUILD_TYPE=Debug -DLLVM_ENABLE_UNWIND_TABLES=On ${CPF_ROOT_PATH}/liberty && \
	make -j${JOBS} && \
	make install
	ln -sf $(CPF_INSTALL_RELEASE)/compile_commands.json $(CPF_ROOT_PATH)
