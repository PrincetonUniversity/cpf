#!/bin/bash
# Script to profile a complete bitcode file using LAMP
# YOUR MUST RUN LOOPSIMPLIFY BEFORE USING LAMP
# You also want to compile your .bc files with -g to get line numbers
#
# $1 - bitcode file to lampify
# $2 - function name -lamp-init-fn FUNCTIONNAME


if [[ x$1 = x ]]
then
  echo "Usage: lamp-profile <bc file>"
  echo -e "\tbc file must be -loopsimplfy "
  echo -e "\tYou should compile with -g for human readable line numbers"
  exit
fi

PREFIX=
if [[ x$GDB != x ]]
then
  PREFIX="gdb --args"
fi

HOOKS=$LIBERTY_LIBS_DIR/liblamp_hooks.a
LAMPBC=${1%.bc}.lamp.bc
LAMPS=${LAMPBC%.bc}.s
EXE=${LAMPBC%.bc}.exe

if [ -a $HOOKS ]
then
  A=a #good
else
  #bad
  echo ''
  echo "Searched for $HOOKS, using LIBERTY_LIBS_DIR"
  echo "Cannot find lamp_hooks.a aborting"
  echo ''
  exit
fi

# Determine if the user specified a function
FCN=
if [[ x$2 != x ]]
then
  FCN=" -lamp-init-fn $2 "
fi



LIBS=" \
       -load $LIBERTY_LIBS_DIR/libUtil.so 
       -load $SCAF_LIBS_DIR/libSCAFUtilities.so
       -load $NOELLE_LIBS_DIR/libSvf.so
       -load $NOELLE_LIBS_DIR/libCudd.so
       -load $SCAF_LIBS_DIR/libMemoryAnalysisModules.so
       -load $LIBERTY_LIBS_DIR/libLoopProf.so
       -load $LIBERTY_LIBS_DIR/libLAMPLoad.so 
       -load $LIBERTY_LIBS_DIR/libLoopProf.so
       -load $LIBERTY_LIBS_DIR/libLAMP.so 
"


#normal lamp doesn't need AA
#AA=`aa` 
DEBUG= #"-debug-only=LAMP"
OPT="opt 
    $LIBS $DEBUG 
    -lamp-insts 
    -insert-lamp-profiling 
    -lamp-view-switch enable 
    -insert-lamp-loop-profiling 
    $FCN 
    -insert-lamp-init 
    $1 -o $LAMPBC"

CMD="$PREFIX $OPT"
echo "Running: $CMD"
$CMD

if [[ $? != 0 ]]
then
   echo "OPT failed"
  exit
fi

#echo
#CMD="clang++ -O3 $LAMPBC $HOOKS -o $EXE"
#echo $CMD
#$CMD


echo ''
CMD="llc -O3 $LAMPBC -o $LAMPS"
echo $CMD 
$CMD

echo ''
CMD="g++ -no-pie -O3 $LAMPS $HOOKS -o $EXE"
echo $CMD 
$CMD

echo ''
echo "Created exe '$EXE', run to generate lamp profiling info"
